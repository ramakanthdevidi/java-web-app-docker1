name: git-mvn-docker-test

on:
  workflow_dispatch:  # Trigger manually via the GitHub Actions UI

jobs:
  Build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/c 
      with:
        repository: DaggupatiPavan/java-web-app-docker  # Replace with your repository if needed

    # Step 2: Build the Java app using Maven
    - name: Build with Maven
      shell: bash
      run: mvn clean package  # Builds your Java app using Maven

    # Step 3: Create Dockerfile with Tomcat 8.5 and JDK 8
    - name: Write Dockerfile
      run: |-
       
        echo "FROM tomcat:8.5-jdk8" > Dockerfile  # Use Tomcat 8.5 with JDK 8
        echo "COPY target/java-web-app*.war /usr/local/tomcat/webapps/java-web-app.war" >> Dockerfile  # Copy WAR file to Tomcat webapps directory

    # Step 4: Login to Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}  # Ensure your Docker Hub username is in secrets
        password: ${{ secrets.DOCKERHUB_TOKEN }}     # Ensure your Docker Hub token is in secrets

    # Step 5: Build the Docker image
    - name: Docker Build
      run: |-
       
        docker build -t pavan176/webapp:v.0.1 .  # Build Docker image with the tag "v.0.1"

    # Step 6: Push the Docker image to Docker Hub
    - name: Push to DockerHub
      run: |-
      
        docker push pavan176/webapp:v.0.1  # Push the built Docker image to Docker Hub

