name: git-mvn-docker-test

on:
  workflow_dispatch:  # This allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: DaggupatiPavan/java-web-app-docker

      # Build the application using Maven
      - name: Build
        run: |
          #!/bin/bash
          mvn clean install
          echo "Maven build completed"

      # Run tests using Maven
      - name: Test
        run: |
          #!/bin/bash
          mvn test

      # Write Dockerfile dynamically for the app
      - name: Write Dockerfile
        run: |
          #!/bin/bash
          echo "FROM openjdk:8-jre" > Dockerfile
          echo "EXPOSE 8080" >> Dockerfile
          echo "COPY target/*.jar /usr/src/myapp.jar" >> Dockerfile

      # Build the Docker image for the application
      - name: Docker Build
        run: |
          #!/bin/bash
          docker build -t pavan176/webapp:v0.1 .

      # Push the Docker image to DockerHub
      - name: Push to DockerHub
        run: |
          #!/bin/bash
          docker push pavan176/webapp:v0.1

      # Deploy the application as a Pod in Kubernetes
      - name: Deploy as Pod
        run: |
          #!/bin/bash
          kubectl delete pod paltoalto || true
          kubectl run paltoalto --image=pavan176/webapp:v0.1 --restart=Never
