name: git-mvn-docker-test2

on:
  workflow_dispatch:  # Trigger manually via the GitHub Actions UI

jobs:
  Build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.0
      with:
        repository: DaggupatiPavan/java-web-app-docker  # Your repo here

    - name: Build with Maven
      shell: bash
      run: mvn clean package  # Builds your Java app using Maven

    # Create Dockerfile dynamically
    - name: Write Dockerfile
      run: |
        echo "FROM openjdk:8-jre" > Dockerfile
        echo "EXPOSE 8080" >> Dockerfile
        echo "COPY target/*.jar /usr/src/myapp.jar" >> Dockerfile

    # Setup QEMU for multi-platform builds (optional, only needed for cross-platform builds)
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    # Setup Docker Buildx for multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Login to Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}  # Ensure your Docker Hub username is in secrets
        password: ${{ secrets.DOCKERHUB_TOKEN }}     # Ensure your Docker Hub token is in secrets

    # Verify build context and files
    - name: Verify Build Context
      shell: bash
      run: |
        whoami
        pwd
        ls
        ls target/

    # Build and push Docker image to Docker Hub
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v6
      with:
        context: .  # Use the current directory as the build context
        push: true   # Push the built image to Docker Hub
        tags: pavan176/webapp:v.0.1  # Docker image tag (modify as needed)
